from vector_db_manager import VectorDBManager
from config import DATA_DIR
from version_manager import get_version_timestamp

# Kh·ªüi t·∫°o manager
manager = VectorDBManager()

# Danh s√°ch ngu·ªìn d·ªØ li·ªáu
sources = [
    DATA_DIR/"2401.08281v3.pdf",  # File PDF
    DATA_DIR/"sample-html-files-sample2.html",  # File HTML
    "Ng√†y h√¥m nay th·∫≠t vui, t√¥i c√≥ quen m·ªôt c√¥ g√°i xinh ƒë·∫πp",  # Raw text
    "T√¥i crush m·ªôt c√¥ g√°i ƒë·∫πp"  # Raw text
]

# X·ª≠ l√Ω t·ª´ng ngu·ªìn
faiss_name = get_version_timestamp()
for source in sources:
    print(f"\nProcessing: {source}")
    try:
        result = manager.ingest(
            source=source,
            faiss_name=faiss_name,
            chunk_size=500,
            chunk_overlap=50
        )
        print(f"‚úÖ {result}")
    except Exception as e:
        print(f"‚ùå Error processing {source}: {str(e)}")

# T√¨m ki·∫øm
print("\nSearching...")
try:
    results = manager.search(
        faiss_name=faiss_name,
        query="machine learning",
        top_k=2,
        threshold=0.6  # Ng∆∞·ª°ng similarity
    )
    
    for result in results:
        print(f"\nüîç Score: {result["score"]:.4f}")
        print(result["content"])
        print(result["source"])

except Exception as e:
    print(f"Search error: {str(e)}")

# Qu·∫£n l√Ω version
# print("\nVersion Management:")
# versions = manager.list_versions()  # Tr·∫£ v·ªÅ dict {version: info}
# if versions:
#     latest_version = next(iter(versions.items()))[0]  # L·∫•y version m·ªõi nh·∫•t
#     print(f"Latest version: {latest_version}")
    
#     # T·∫£i l·∫°i index
#     try:
#         print("\nReloading index...")
#         reloaded_index = manager.load_index(latest_version)
#         print(f"‚úÖ Successfully reloaded version {latest_version}")
#     except Exception as e:
#         print(f"‚ùå Failed to reload: {str(e)}")
# else:
#     print("No versions available")