services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://${KAFKA_HOST}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  ingest-service:
    container_name: ingest-service
    build:
      context: ./ingest-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  processing-service:
    container_name: processing-service
    build:
      context: ./processing-service
      dockerfile: Dockerfile
    ports:
      - "8001:8000" # For prometheus metrics
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      TRAVELDB_URL: ${TRAVELDB_URL}
    volumes:
      - ./processing-service:/app

  crawler-service:
    container_name: crawler-service
    build:
      context: ./crawler-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000"
    depends_on:
      ingest-service:
        condition: service_started
    environment:
      GENAI_API_KEY: ${GENAI_API_KEY}
      INGEST_SERVICE_URL: http://ingest-service:8000
      BATCH_SIZE: ${BATCH_SIZE}