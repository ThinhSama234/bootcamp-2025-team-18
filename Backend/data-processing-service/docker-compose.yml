services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LOG_RETENTION_MS: -1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  location_db:
    container_name: location_db
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db

  ingest-service:
    container_name: ingest-service
    build:
      context: ./ingest-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092

  processing-service:
    container_name: processing-service
    build:
      context: ./processing-service
      dockerfile: Dockerfile
    ports:
      - "8002:8000" # For prometheus metrics
    depends_on:
      kafka:
        condition: service_started
      location_db:
        condition: service_started
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      MONGODB_URI: mongodb://location_db:27017/location_data
    volumes:
      - ./processing-service:/app


volumes:
  mongodb_data: